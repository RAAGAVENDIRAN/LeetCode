C++ :

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    typedef ListNode Node;

Node * merge(Node *a,Node *b){
    if(a==NULL) return b;
    if(b==NULL) return a;
    Node *head=NULL,*tail=NULL;
    if(a->val < b->val){
        head=tail=a;
        a=a->next;
    }
    else{
        head=tail=b;
        b=b->next;
    }
    while(a!=NULL && b!=NULL){
        if(a->val < b->val){
            tail->next=a;
            tail=a;
            a=a->next;

        }
        else{
            tail->next=b;
            tail=b;
            b=b->next;
        }
    }

    if(a==NULL)
        tail->next=b;
    if(b==NULL)
        tail->next=a;

    return head;
}

ListNode* mergeKLists(vector<ListNode*>&n) {
        Node *head=NULL;
        for(auto i:n){
            head=merge(head,i);
        }
        return head;
    }
    
};
